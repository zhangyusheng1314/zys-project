spring:
  application:
    name: zys-paya
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/zys_paya?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&verifyServerCertificate=false
    username: root
    password: root
    #hikari\u6570\u636E\u5E93\u8FDE\u63A5\u6C60
    hikari:
      pool-name: MyHikariCP
      minimum-idle: 5 #\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u91CF
      idle-timeout: 180000 #\u7A7A\u95F2\u8FDE\u63A5\u5B58\u6D3B\u6700\u5927\u65F6\u95F4\uFF0C\u9ED8\u8BA4600000\uFF0810\u5206\u949F\uFF09
      maximum-pool-size: 10 #\u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF0C\u9ED8\u8BA4\u662F10
      auto-commit: true  #\u6B64\u5C5E\u6027\u63A7\u5236\u4ECE\u6C60\u8FD4\u56DE\u7684\u8FDE\u63A5\u7684\u9ED8\u8BA4\u81EA\u52A8\u63D0\u4EA4\u884C\u4E3A,\u9ED8\u8BA4\u503C\uFF1Atrue
      max-lifetime: 1800000 #\u6B64\u5C5E\u6027\u63A7\u5236\u6C60\u4E2D\u8FDE\u63A5\u7684\u6700\u957F\u751F\u547D\u5468\u671F\uFF0C\u503C0\u8868\u793A\u65E0\u9650\u751F\u547D\u5468\u671F\uFF0C\u9ED8\u8BA41800000\u537330\u5206\u949F
      connection-timeout: 60000 #\u6570\u636E\u5E93\u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4,\u9ED8\u8BA430\u79D2\uFF0C\u537330000
      connection-test-query: SELECT 1
server:
  port: 8086
mybatis-plus:
  # MyBatis 配置文件位置，如果您有单独的 MyBatis 配置，请将其路径配置到 configLocation 中。
  # config-location: classpath:mybatis-config.xml
  # MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法
  mapper-locations: classpath:/com/zys/paya/mapper/**/*Mapper.xml

  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zys.paya.model
  global-config:
    #\u4E3B\u952E\u7C7B\u578B  0:"\u6570\u636E\u5E93ID\u81EA\u589E", 1:"\u7528\u6237\u8F93\u5165ID",2:"\u5168\u5C40\u552F\u4E00ID (\u6570\u5B57\u7C7B\u578B\u552F\u4E00ID)", 3:"\u5168\u5C40\u552F\u4E00ID UUID";
    id-type: 0
    #\u5B57\u6BB5\u7B56\u7565 0:"\u5FFD\u7565\u5224\u65AD",1:"\u975E NULL \u5224\u65AD"),2:"\u975E\u7A7A\u5224\u65AD"
    field-strategy: 2
    #\u9A7C\u5CF0\u4E0B\u5212\u7EBF\u8F6C\u6362
    db-column-underline: true
    #\u5237\u65B0mapper \u8C03\u8BD5\u795E\u5668
    refresh-mapper: true
    #\u6570\u636E\u5E93\u5927\u5199\u4E0B\u5212\u7EBF\u8F6C\u6362
    #capital-mode: true
    #\u5E8F\u5217\u63A5\u53E3\u5B9E\u73B0\u7C7B\u914D\u7F6E
    #key-generator: com.baomidou.springboot.xxx
    #\u903B\u8F91\u5220\u9664\u914D\u7F6E
    logic-delete-value: 0
    logic-not-delete-value: 1
    #\u81EA\u5B9A\u4E49\u586B\u5145\u7B56\u7565\u63A5\u53E3\u5B9E\u73B0
    #meta-object-handler: com.baomidou.springboot.xxx
    #\u81EA\u5B9A\u4E49SQL\u6CE8\u5165\u5668
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

#dubbo:
#  application:
#    id: zys-paya
#    name: zys-paya
#    qos-port: 22212
#    qos-enable: true
#  scan:
#    base-packages: com.zys.paya
#  protocol:
#    id: dubbo
#    name: dubbo
#    port: 20882
#  registry:
#    id: zys-paya-registry
#    address: zookeeper://192.168.146.128:2181
